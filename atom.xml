<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[cytms]]></title>
  <link href="http://cytms.github.com/atom.xml" rel="self"/>
  <link href="http://cytms.github.com/"/>
  <updated>2018-05-06T12:49:29+08:00</updated>
  <id>http://cytms.github.com/</id>
  <author>
    <name><![CDATA[cytms]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Conditional Generation]]></title>
    <link href="http://cytms.github.com/blog/2018/05/01/conditional-generation/"/>
    <updated>2018-05-01T13:33:00+08:00</updated>
    <id>http://cytms.github.com/blog/2018/05/01/conditional-generation</id>
    <content type="html"><![CDATA[<p>可以給 attention 設 regularization</p>

<p>解決一步錯、步步錯的問題
scheduled sampling
擲銅板決定要看 model 的 output 還是 reference</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ensemble]]></title>
    <link href="http://cytms.github.com/blog/2018/04/28/ensemble/"/>
    <updated>2018-04-28T17:36:00+08:00</updated>
    <id>http://cytms.github.com/blog/2018/04/28/ensemble</id>
    <content type="html"><![CDATA[<p>Ensemble 有兩種方法: Bagging &amp; Boosting</p>

<h4>Bagging</h4>

<p>主要是減低 variance (model 太複雜容易 overfit)</p>

<p>nn 沒有那麼容易 overfit (無法在 training set 上 overfit)</p>

<p>decision tree 很容易 overfit (只要他想就可以拿到 100% precision)</p>

<p>random forest: decision tree 做 bagging 的版本</p>

<h5>OOB (Out-Of-Bag)</h5>

<h4>Boosting</h4>

<p>主要是用在比較弱的 model 去 fit 你的 training data</p>

<p>加上 weight (在 training 的時候就會多考慮)</p>

<h5>Adaboost</h5>

<p>error 大的 weight 就要比較大</p>

<h5>Decision Stump</h5>

<p>沒什麼好解釋的</p>

<h5>Gradient Boosting</h5>

<p>跟 Adaboost 87% 像，可以自訂 objective function</p>

<p>[to be continued..]</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pointer Network]]></title>
    <link href="http://cytms.github.com/blog/2018/04/22/pointer-network/"/>
    <updated>2018-04-22T18:20:00+08:00</updated>
    <id>http://cytms.github.com/blog/2018/04/22/pointer-network</id>
    <content type="html"><![CDATA[<p>Pointer Network 主要是處理未曾見過的字元，常用於 NLP。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[la musique]]></title>
    <link href="http://cytms.github.com/blog/2015/03/18/la-musique/"/>
    <updated>2015-03-18T01:30:00+08:00</updated>
    <id>http://cytms.github.com/blog/2015/03/18/la-musique</id>
    <content type="html"><![CDATA[<iframe width="560" height="315" src="https://www.youtube.com/embed/9Z-NbQvhzKM" frameborder="0" allowfullscreen></iframe>


<p></p>

<h3>Vanessa Chantal Paradis - la seine</h3>

<p>Elle sort de son lit 她起床 <br/>
Tellement sure d&#8217;elle 如此地有自信<br/>
La Seine, la Seine, la Seine 塞納河 塞納河 塞納河</p>

<!-- More -->


<p>
Tellement jolie 如此美麗 <br/>
Elle m’ensorcelle 她對我下蠱迷惑我  <br/>
La Seine, la Seine, la Seine 塞納河 塞納河 塞納河 <br/>
Extralucide 有如天眼通般的 <br/>
La lune est sur 月亮在 <br/>
La Seine, la Seine, la Seine 塞納河上 塞納河上 塞納河上 <br/>
Tu n&#8217;es pas saoul 你沒有醉  <br/>
Paris est sous 巴黎就在 <br/>
La Seine, la Seine, la Seine 塞納河中  <br/>
je ne sais, ne sais, ne sais pas pourquoi 我不知, 不知, 不知道為什麼  <br/>
C&#8217;est comme ca, la Seine et moi 塞納河與我 就是這樣  <br/>
Je ne sais, ne sais, ne sais pas pourquoi 我不知, 不知, 不知道為什麼<br/>
On s&#8217;aime comme ca la Seine et moi 塞納河與我 就是這樣相<br/>
Extralucide 有如天眼通似的 <br/>
Quand tu est sur 當你在 <br/>
La Seine, la Seine, la Seine 塞納河上 塞納河上 塞納河上 <br/>
Extravagante 是荒謬反常的 <br/>
Quand l&#8217;ange est sur 當天使在 <br/>
La Seine, la Seine, la Seine 塞納河上 塞納河上 塞納河上  <br/>
Je ne sais, ne sais, ne sais pas pourquoi  <br/>
C&#8217;est comme ca, la Seine et moi  <br/>
Je ne sais, ne sais, ne sais pas pourquoi  <br/>
On s&#8217;aime comme ca la Seine et moi  <br/>
Sur le pont des Arts 在藝術之橋上 <br/>
Mon coeur vacille 我心顫動 <br/>
Entre les eaux 在水中 <br/>
L’air est si bon 空氣是多麼美好 <br/>
Cet air si pur 這氣體很純淨 <br/>
Je le respire 我呼吸著空氣 <br/>
Nos reflets perches sur ce pont 我們的倒影停留在這橋上  <br/>
Je ne sais, ne sais, ne sais pas pourquoi  <br/>
C&#8217;est comme ca, la Seine et moi  <br/>
Je ne sais, ne sais, ne sais pas pourquoi  <br/>
On s&#8217;aime comme ca la Seine et moi</p>

<iframe width="420" height="315" src="https://www.youtube.com/embed/_QHz89G417k" frameborder="0" allowfullscreen></iframe>


<p></p>

<h3>Cecilia Cara - Et je danse 和我跳舞</h3>

<p>Piano blanc sur la plage <br/>
在海灘上的白色鋼琴 <br/>
Refrain d&#8217;une enfant sage <br/>
合唱團的一個聰明的孩子 <br/>
Toi velours fait de sables <br/>
你如天鵝絨製成的沙子 <br/>
Le vent sur mon visage <br/>
由風在我臉上掠過 <br/>
Et je me souviens <br/>
我還記得 <br/>
De ces mots qui t&#8217;allaient si bien <br/>
這些話你是這樣 <br/>
Mes reves incertains <br/>
我的夢想不確定 <br/>
Ou j&#8217;esperai l&#8217;amour au rivage de mes lendemains <br/>
我希望明天愛能到岸</p>

<p>Si on danse en silence <br/>
如果我們在沉默中跳舞 <br/>
Porter par le souffle du temps <br/>
隨著時間的呼吸 <br/>
De saisons en passion <br/>
四季中的熱情 <br/>
Cet enfant en moi revait tant <br/>
這孩子在我的夢想 <br/>
L&#8217;unique instant <br/>
唯一的一次 <br/>
D&#8217;aimer vraiment&#8230; <br/>
真愛&#8230;</p>

<p>Tu peux peindre les eaux du bleu de ton regard <br/>
你可以畫在你眼眸中的湛藍海水 <br/>
Et dans chaque canot pres de toi je m&#8217;egare <br/>
而我徘徊在您附近的每個獨木舟 <br/>
Me laisse emporte par les remous de mes pensees <br/>
我的思想漩渦帶我離開 <br/>
Mysterieux abbaye ou les vagues se meurent a mes pieds <br/>
在我腳底死去的神祕修道院 <br/>
Et font naitre mes reves <br/>
我的夢想誕生了</p>

<p>Et je danse en silence <br/>
和我在沉默中跳舞 <br/>
Porter par le souffle du temps <br/>
跟隨時間的呼吸 <br/>
De saisons en passion <br/>
四季中的熱情 <br/>
Je veux croire en mes illusions <br/>
我要相信我的幻想 <br/>
En mes reves d&#8217;enfant&#8230; <br/>
孩子在我的夢想&#8230;&#8230;</p>

<p>Pour un jour <br/>
一天 <br/>
Pour toujours <br/>
永遠 <br/>
D&#8217;autre part font bruler mon sang <br/>
另一方面，燃燒我的血 <br/>
Est-ce toi, cet homme la <br/>
這個人是你嗎？ <br/>
A qui j&#8217;ai crie si souvent <br/>
我經常為誰而流淚 <br/>
&#8220;Reve moi, une fois&#8221; <br/>
&#8220;再想我一次&#8221; <br/>
Il est la peut-etre l&#8217;amour que j&#8217;attendais tant <br/>
這可能是我奢求的愛</p>

<iframe width="420" height="315" src="https://www.youtube.com/embed/sD33vZsClgs" frameborder="0" allowfullscreen></iframe>


<p></p>

<h3>Rose - La Liste</h3>

<p>Aller a un concert 先聽個演唱會<br/>
Repeindre ma chambre en vert 再來漆綠我的房間<br/>
Boire de la vodka 喝完了伏特加<br/>
Aller chez Ikea 再去IKEA逛逛<br/>
Mettre un decollete 穿上性感的大V領衫<br/>
Louer un meuble 出去租個小房間<br/>
Et puis tout massacrer 然後整個給它搗毀</p>

<p>Pleurer pour un rien 有點莫名的落淚<br/>
Acheter un chien 只好買隻狗相陪<br/>
Faire semblant d&#8217;avoir mal 假裝自己煩了倦了<br/>
Et mettre les voiles 揚起風帆<br/>
Fumer beaucoup trop 抽點煙 抽了過點頭<br/>
Prendre le metro 就來搭個地鐵<br/>
Et te prendre en photo 然後再對你拍個照</p>

<p>Jeter tout par les fenetres 把煩惱都拋到外邊<br/>
T&#8217;aimer de tout mon etre 擁抱最愛的你<br/>
Je ne suis bonne qu&#8217;a ca 只有這樣讓我心甜<br/>
Est ce que ca te de-coit ? 不知道這樣的我會不會讓你生厭<br/>
J&#8217;ai rien trouver de mieux a faire可我沒有更棒的妙點<br/>
et ca peut paraitre bien ordinaire嗯~這似乎有點平凡<br/>
et c&#8217;est la liste des choses que je veux faire avec toi 好啦!這就是清單上準備跟你做的事</p>

<p>Te faire mourir de rire 我要讓你成天笑開壞<br/>
Aspirer tes soupirs 靜靜感覺你的呼吸<br/>
M&#8217;enfermer tout le jour 整天膩在一起<br/>
Ecrire des mots d&#8217;amour 無聊寫些愛的字句<br/>
Boire mon cafe noir 再喝點我的黑咖啡<br/>
Me lever en retard 賴了床<br/>
Pleurer sur un trottoir 不爽就在走廊上暗垂淚</p>

<p>Me serrer sur ton coeur 擁我在你的心田<br/>
Pardonner tes erreurs 請記得對我道歉<br/>
Jouer de la guitare 隨後一邊彈著吉他<br/>
Danser sur un comptoir 一起舞在吧台邊<br/>
Remplir un caddie 在裝滿超市的菜籃<br/>
Avoir une petite fille 養個小鬼<br/>
Et passer mon permis 然後考個駕照</p>

<p>Jeter tout par les fenetres 請把煩惱都丟到外邊<br/>
T&#8217;aimer de tout mon etre 我擁有最愛的你<br/>
Je ne suis bonne qu&#8217;a ca 只有這樣最讓我心甜<br/>
Est ce que ca te de-coit ? 不知道這樣的我會不會惹你心倦<br/>
J&#8217;ai rien trouver de mieux a faire我再找不到更棒的妙點<br/>
et ca peut paraitre bien ordinaire雖然這看起來有點平凡<br/>
et c&#8217;est la liste des choses que je veux faire avec toi 但這就是我列在清單上想和你一起做的事</p>

<p>ha ha ha ya<br/>
ha ya ha ha</p>

<p>Je sais je suis trop naive 我知道我很天真<br/>
De dresser la liste non exhaustive 編了一些不嚴謹的條子<br/>
De toutes ces choses que je voudrais faire avec toi 和一些平凡想跟你一起做的事</p>

<p>T&#8217;embrasser partout 好想親擁你全身<br/>
S&#8217;aimer quand on est saouls 互愛像瘋癲<br/>
Regarder les infos 再聽些馬路新聞<br/>
Et fumer toujours trop 菸永遠抽過了頭點<br/>
Eveiller tes soupcons 惹起你的懷疑好奇心<br/>
Te demander pardon 再跟你道個歉<br/>
Et te traiter de con 待你像個阿呆般耍賤</p>

<p>Avoir un peu de spleen 再來點顧影自憐<br/>
Ecouter Janis Joplin 聽點詹尼斯喬普林<br/>
Te regarder dormir 看著你入眠<br/>
Me regarder guerir 再看著我傷痛復原<br/>
Faire du velo a deux 倆倆騎著單車<br/>
Se dire qu&#8217;on est heureux 相視吟唱我們的幸福<br/>
Emmerder les envieux 不管那些忌妒的嘴臉</p>

<iframe width="560" height="315" src="https://www.youtube.com/embed/Lle_GA1cg20" frameborder="0" allowfullscreen></iframe>


<p></p>

<h3>Pink Martini - Je ne veux pas travailler</h3>

<p>Ma chambre a la forme d’une cage<br/>
Le soleil passe son bras par la fenetre <br/>
Les chasseurs a ma porte <br/>
Comme les petits soldats <br/>
Qui veulent me prendre <br/>
我的房間好似一座牢籠 <br/>
太陽滲入窗欄伸手進來 <br/>
這光影幻化成穿條紋狀制服的門房 <br/>
就好像小小士兵 <br/>
想將我逮捕</p>

<p>(refrain) <br/>
Je ne veux pas travailler <br/>
Je ne veux pas dejeuner <br/>
Je veux seulement l’oublier <br/>
Et puis je fume <br/>
(副歌) <br/>
我無心工作 <br/>
沒心思吃飯 <br/>
我只想忘了他 <br/>
而我卻只能抽著菸</p>

<p>Deja j’ai connu le parfum de l’amour <br/>
Un million de roses n’embaumerait pas autant <br/>
Maintenant une seule fleur dans mes entourages <br/>
Me rend malade <br/>
我震攝於動人愛情的芬芳 <br/>
百萬朵的玫瑰都無法勝於此 <br/>
而今只要有一朵花在我周圍 <br/>
都令我無法招架</p>

<p>Je ne suis pas fiere de ca <br/>
Vie qui veut me tuer <br/>
C’est magnifique etre sympathique <br/>
Mais je ne le connais jamais <br/>
我也不想如此膽大 <br/>
過這種毀滅自己的生活 <br/>
但這種無與倫比的愉悅 <br/>
是我從來不曾認識過的啊</p>

<iframe width="420" height="315" src="https://www.youtube.com/embed/x86kdIG5OuU" frameborder="0" allowfullscreen></iframe>


<p></p>

<h3>Joyce Jonathan - je ne sais pas</h3>

<p>Il y&#8217;a des mots qui me gênent des centaines de mots des milliers de rengaines qui ne sont jamais les mêmes<br/>
有些話讓我覺得很困擾 數以百計的話 雖然都是些老掉牙的故事 但還是不盡相同<br/>
Comment te dire je veux pas te mentir tu m&#8217;attires et c&#8217;est la que se trouve le vrai fond du problème<br/>
該怎麼告訴你呢? 我不想騙你 我深深的被你吸引了 這就是我覺得最嚴重的問題<br/>
Ton orgueil, tes caprices, tes baisers, tes délices, tes désirs tes supplices je vois vraiment pas où ça nous mène<br/>
你的驕傲 你的任性 你的親吻和喜悅 你的慾望和苦惱 我真的不知道自己會被帶往何處<br/>
Alors, on se raisonne c&#8217;est pas la fin de notre monde<br/>
我們為自己找理由 這又不是世界末日<br/>
Et à tort, on se questionne encore une dernière fois<br/>
沒有必要 我們又再一次質問彼此</p>

<p>Je ne sais pas comment te dire j&#8217;aurais peur de tout foutre en l&#8217;air, de tout détruire<br/>
我不知道該怎麼告訴你 我害怕全都搞砸了 全部都將徹底毀了<br/>
Un tas d&#8217;idées à mettre au clair depuis longtemps<br/>
有一堆念頭需要被釐清 好一段時間以來<br/>
Mais j&#8217;ai toujours laissé derrière mes sentiments<br/>
我都置之不理 我的情感</p>

<p>Parfois je me dis que j&#8217;ai tort de rester si passive mais d&#8217;où tu me regardes, moi je te dévore<br/>
有時候我告訴自己不應該這麼消極 可是當你看著我時 我又想把你整個人吞沒<br/>
Et c&#8217;est parfois trop dur de discerner l&#8217;amour<br/>
有時候認清愛情真的好難<br/>
Mon ami, mon amant, mon amour, et bien plus encore<br/>
我的朋友 我的情人 我的愛人 或是更多<br/>
Alors, on se raisonne, c&#8217;est pas la fin de notre monde<br/>
我們為自己找理由 這又不是世界末日<br/>
Et à tort, on se questionne encore une dernière fois<br/>
沒有必要 我們又再一次質問彼此</p>

<p>Je ne sais pas comment te dire j&#8217;aurais peur de tout foutre en l&#8217;air, de tout détruire<br/>
我不知道該怎麼告訴你 我害怕全都搞砸了 全部都將徹底毀了<br/>
Un tas d&#8217;idées à mettre au clair depuis longtemps<br/>
有一堆念頭需要被釐清 好一段時間以來<br/>
Mais j&#8217;ai toujours laissé derrière mes sentiments<br/>
我都置之不理 我的情感</p>

<p>Je ne sais pas comment te dire j&#8217;aurais peur de tout foutre en l&#8217;air de tout détruire<br/>
我不知道該怎麼告訴你 我害怕全都搞砸了 全部都將徹底毀了<br/>
Un tas d&#8217;idées à mettre au clair depuis longtemps<br/>
有一堆念頭需要被釐清 好一段時間以來<br/>
Mais j&#8217;ai toujours laissé derrière mes sentiments<br/>
更多更詳盡歌詞 在 ※ Mojim.com　魔鏡歌詞網 <br/>
我都置之不理 我的情感</p>

<p>je te veux toi avec défauts et tes problèmes de fabrications<br/>
我想要你 和你的缺點 還有你與生俱來的問題<br/>
je te veux toi, j&#8217;veux pas un faux pas de contrefaçons<br/>
我要你 我不要一個虛假的 不要仿冒的<br/>
j&#8217;vais pas te rendre pour prendre un autre<br/>
我不會為了要跟別人在一起而把你退回去<br/>
j&#8217; vais pas te vendre pour une ou deux fautes<br/>
也不會為了一個或二個缺點而把你賣掉<br/>
je veux tes mots, je veux ta peau, c&#8217;est jamais trop<br/>
我要你的話語 你的身體 這要求並不會太多<br/>
je te veux plus changer d&#8217;avis j&#8217;ai vu un autre un peu plus joli<br/>
我要你的這個想法不會再改變 即使看見了一個更漂亮的<br/>
je ne veux pas je ne veux plus jamais voulu<br/>
我也不會要 我再也不想要了 從來就不想<br/>
et puis t&#8217;es qui j&#8217;te connais pas t&#8217;as du rêver ce n&#8217;était pas moi<br/>
mes confusions tu les connais laissons tomber<br/>
然後 我認識你嗎 你夢裡的人應該不是我 我們的尷尬和誤會 你知道的 唉&#8230;算了</p>

<p>comment te dire j&#8217;aurais peur de tout foutre en l&#8217;air de tout détruire<br/>
該怎麼告訴你 我害怕全都搞砸了 全部都將徹底毀了<br/>
Un tas d&#8217;idées à mettre au clair depuis longtemps<br/>
有一堆念頭需要被釐清 好一段時間以來<br/>
Mais j&#8217;ai toujours laissé derrière mes sentiments<br/>
我都置之不理 我的情感</p>

<p>Je ne sais pas comment te dire j&#8217;aurais peur de tout foutre en l&#8217;air de tout détruire<br/>
我不知道該怎麼告訴你 我害怕全都搞砸了 全部都將徹底毀了<br/>
Un tas d&#8217;idées à mettre au clair depuis longtemps<br/>
有一堆念頭需要被釐清 好一段時間以來<br/>
Mais j&#8217;ai toujours laissé derrière mes sentiments<br/>
我都置之不理 我的情感</p>

<p>Je ne sais pas comment te dire j&#8217;aurais peur de tout foutre en l&#8217;air de tout détruire<br/>
我不知道該怎麼告訴你 我害怕全都搞砸了 全部都將徹底毀了<br/>
Un tas d&#8217;idées à mettre au clair depuis longtemps<br/>
有一堆念頭需要被釐清 好一段時間以來<br/>
Mais j&#8217;ai toujours laissé derrière mes sentiments<br/>
我都置之不理 我的情感</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Chinese NLP by NER (java)]]></title>
    <link href="http://cytms.github.com/blog/2015/03/12/chinese-nlp-by-ner/"/>
    <updated>2015-03-12T11:45:00+08:00</updated>
    <id>http://cytms.github.com/blog/2015/03/12/chinese-nlp-by-ner</id>
    <content type="html"><![CDATA[<p><a href="http://nlp.stanford.edu/software/CRF-NER.shtml">[NER]</a> 是 stanford 所提供的一個 Natural Language Processing 套件，現在就讓歪踢帶你快速上手他的 API 。</p>

<!--More-->


<p>中文跟英文不一樣，字字相連在一起，所以你要使用NER以前，必須先對你的input做segmentation。而 stanford 就提供了他們自己的斷字 API - <a href="http://nlp.stanford.edu/software/segmenter.shtml">Stanford Word Segmenter</a>，你只要下載檔案、加 jar 檔到你的project中就可以輕鬆斷字。</p>

<p>接下來就是範例程式：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>import edu.stanford.nlp.ie.AbstractSequenceClassifier;
</span><span class='line'>import edu.stanford.nlp.ling.CoreLabel;
</span><span class='line'>import edu.stanford.nlp.ling.CoreAnnotations;
</span><span class='line'>import edu.stanford.nlp.util.StringUtils;
</span><span class='line'>import edu.stanford.nlp.util.Triple;
</span><span class='line'>import java.io.PrintStream;
</span><span class='line'>import java.io.UnsupportedEncodingException;
</span><span class='line'>import java.util.List;
</span><span class='line'>import java.util.Properties;
</span><span class='line'>
</span><span class='line'>import edu.stanford.nlp.ie.crf.CRFClassifier;
</span><span class='line'>
</span><span class='line'>public class NERDemo {
</span><span class='line'>  private static final String basedir = 
</span><span class='line'>      System.getProperty("SegDemo", "stanford-segmenter-2015-01-30/data");
</span><span class='line'>
</span><span class='line'>  public static void main(String[] args) throws Exception {
</span><span class='line'>
</span><span class='line'>      String serializedClassifier = 
</span><span class='line'>              "stanford-ner-2015-01-30/classifiers/chinese.misc.distsim.crf.ser.gz";
</span><span class='line'>
</span><span class='line'>      AbstractSequenceClassifier&lt;CoreLabel> classifier = 
</span><span class='line'>              CRFClassifier.getClassifier(serializedClassifier);
</span><span class='line'>
</span><span class='line'>      String sample = "徐佳青表示，思慮不週造成這樣的結果，非她本意，也因有愧發言人職責，昨天即辭發言人以示負責。" +
</span><span class='line'>              "希望不要因這個事件，讓社會更值得被討論的重要事情失焦。她會深切虛心反省，也會秉持初衷，堅持信仰價值。" + 
</span><span class='line'>              "感謝各位關心與指教。";
</span><span class='line'>
</span><span class='line'>      String fileContents = getSeg(sample);
</span><span class='line'>      System.out.println(fileContents);
</span><span class='line'>
</span><span class='line'>      List&lt;List&lt;CoreLabel>> out = classifier.classify(fileContents);
</span><span class='line'>      System.out.println(out);
</span><span class='line'>      for (List&lt;CoreLabel> sentence : out) {
</span><span class='line'>          for (CoreLabel word : sentence) {
</span><span class='line'>              System.out.print(word.word() + '/'
</span><span class='line'>                      + word.get(CoreAnnotations.AnswerAnnotation.class)
</span><span class='line'>                      + ' ');
</span><span class='line'>          }
</span><span class='line'>          System.out.println();
</span><span class='line'>      }
</span><span class='line'>  }
</span><span class='line'>
</span><span class='line'>  private static String getSeg(String sample) {
</span><span class='line'>      try {
</span><span class='line'>          System.setOut(new PrintStream(System.out, true, "utf-8"));
</span><span class='line'>      } catch (UnsupportedEncodingException e) {
</span><span class='line'>          e.printStackTrace();
</span><span class='line'>      }
</span><span class='line'>
</span><span class='line'>      Properties props = new Properties();
</span><span class='line'>      props.setProperty("sighanCorporaDict", basedir);
</span><span class='line'>      // below is needed because CTBSegDocumentIteratorFactory accesses it
</span><span class='line'>      props.setProperty("serDictionary", basedir + "/dict-chris6.ser.gz");
</span><span class='line'>      props.setProperty("inputEncoding", "UTF-8");
</span><span class='line'>      props.setProperty("sighanPostProcessing", "true");
</span><span class='line'>
</span><span class='line'>      CRFClassifier&lt;CoreLabel> segmenter = new CRFClassifier&lt;CoreLabel>(props);
</span><span class='line'>      segmenter.loadClassifierNoExceptions(basedir + "/ctb.gz", props);
</span><span class='line'>
</span><span class='line'>      // ZHConverter converter = ZHConverter.getInstance(ZHConverter.SIMPLIFIED);
</span><span class='line'>      // ZHConverter.getInstance(ZHConverter.SIMPLIFIED);
</span><span class='line'>      // sample = converter.convert(sample);
</span><span class='line'>      List&lt;String> segmented = segmenter.segmentString(sample);
</span><span class='line'>      System.out.println(StringUtils.join(segmented));
</span><span class='line'>      return StringUtils.join(segmented);
</span><span class='line'>  }
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p><code>word.get(CoreAnnotations.AnswerAnnotation.class)</code>取得的就是該詞彙的屬性。有鑑於此標註系統是由簡體中文 train 出來的，各位大大如果不嫌棄的話可以先將繁體字使用<a href="https://code.google.com/p/java-zhconverter/">[ZHConverter]</a>轉乘簡體中文，再來使用此系統，performance 說不定會好一些些。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[going to IÉSEG]]></title>
    <link href="http://cytms.github.com/blog/2015/01/20/going-to-ieseg/"/>
    <updated>2015-01-20T23:11:00+08:00</updated>
    <id>http://cytms.github.com/blog/2015/01/20/going-to-ieseg</id>
    <content type="html"><![CDATA[<iframe src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d5076573.4977888735!2d7.384291672123246!3d51.590308455793476!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x0000000000000000%3A0x680c68b6d28d68dd!2zScOJU0VH!5e0!3m2!1szh-TW!2stw!4v1426522330051" width="100%" height="400" frameborder="0" style="border:0"></iframe>


<p>這裡就是我今年要去歷練半年的地方！希望我可以滿載而歸 : )</p>

<!-- More -->


<ul>
<li><h4>5件我出國前要做的事：</h4>

<ol>
<li>寫完論文</li>
<li>加強法文聽力與口說</li>
<li>存款達30萬</li>
<li>訂到一張經濟實惠的機票</li>
<li>每週跟家人吃飯3次</li>
</ol>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[elasticsearch 101]]></title>
    <link href="http://cytms.github.com/blog/2014/05/19/elasticsearch-101/"/>
    <updated>2014-05-19T23:26:00+08:00</updated>
    <id>http://cytms.github.com/blog/2014/05/19/elasticsearch-101</id>
    <content type="html"><![CDATA[<p>如果有安裝 Homebrew 的話直接 <code>brew installation</code> 就可以完成 es 的安裝。</p>

<!-- More -->


<h4>首先，先跟大家簡介一下 es 的基本功能及資料</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># 設定檔位置，可在該資料夾編輯 yml 檔
</span><span class='line'>/usr/local/Cellar/elasticsearch/0.90.2/config
</span><span class='line'>
</span><span class='line'># 打開es引擎並指定 elasticsearch.yml 為 mapping 和 setting 的依據
</span><span class='line'>elasticsearch -f -D config/elasticsearch.yml
</span><span class='line'>
</span><span class='line'># 刪掉叫做 recepes 的 index
</span><span class='line'>curl -XDELETE 'http://localhost:9200/recipes/'</span></code></pre></td></tr></table></div></figure>


<p>若要把它嵌在 rails 中，則可使用 <a href="https://github.com/karmi/tire">Tire</a> 作為輔助工具。在 rails application 底下可以直接下 <code>rake environment tire:import CLASS='Recipe' FORCE=true</code> 即可建立該 class 的 index。</p>

<p>因為每次建 index 都會花費一小段時間，若單純想要測試可不可以 work 的話可以在 console 內執行 <code>Recipe.index.import Recipe.first(200)</code> 就可以僅建前幾筆的 index 即可。</p>

<h4>如果你要安裝 plugins</h4>

<p>放置 plugin 的資料夾為 <code>/usr/local/var/lib/elasticsearch/plugins/</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># 進到 elasticsearch 的資料夾中進行安裝
</span><span class='line'>bin/plugin -install elasticsearch/elasticsearch-analysis-xxx/1.x.x
</span><span class='line'>mvn clean package
</span><span class='line'>
</span><span class='line'># 在 target 中會產生出 SNAPSHOT.jar 檔，將該檔案複製到 plugin 的資料夾中即可
</span><span class='line'>cp target/elasticsearch-analysis-xxx-1.x.x-SNAPSHOT.jar
</span><span class='line'> ../plugins/analysis-xxx/elasticsearch-analysis-xxx-1.x.x.jar</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iPython 101]]></title>
    <link href="http://cytms.github.com/blog/2014/04/02/ipython-101/"/>
    <updated>2014-04-02T23:03:00+08:00</updated>
    <id>http://cytms.github.com/blog/2014/04/02/ipython-101</id>
    <content type="html"><![CDATA[<p>有一天 Richard 開始好奇愛料理資料庫有著怎樣看不到的祕密，於是我就開始使用 iPython 將資料庫中的資料視覺化呈現出來。</p>

<!--more-->


<ul>
<li><h4>如何安裝 iPython? (from Richard)</h4></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># set up some taps and update brew
</span><span class='line'>brew tap homebrew/science # a lot of cool formulae for scientific tools
</span><span class='line'>brew tap samueljohn/python # numpy, scipy
</span><span class='line'>brew update && brew upgrade
</span><span class='line'>
</span><span class='line'># install a brewed python
</span><span class='line'>brew install python
</span><span class='line'>
</span><span class='line'># install openblas (otherwise scipy's arpack tests will fail)
</span><span class='line'>brew install openblas
</span><span class='line'>
</span><span class='line'># install PIL, imagemagick, graphviz and other
</span><span class='line'># image generating stuff (qt is nice for viewing)
</span><span class='line'>brew install pillow imagemagick graphviz
</span><span class='line'>brew install cairo --without-x
</span><span class='line'>brew install py2cairo # this will ask you to download xquartz and install it
</span><span class='line'>brew install qt pyqt
</span><span class='line'>
</span><span class='line'># install nose (unittests & doctests on steroids)
</span><span class='line'>pip install virtualenv nose
</span><span class='line'>
</span><span class='line'># install numpy and scipy
</span><span class='line'>brew install numpy --with-openblas
</span><span class='line'>brew install scipy --with-openblas
</span><span class='line'>
</span><span class='line'># some cool python libs (if you don't know them, look them up)
</span><span class='line'># time series stuff, natural language toolkit
</span><span class='line'># generate plots, symbolic maths in python, fancy debugging output
</span><span class='line'>pip install pandas nltk matplotlib sympy q
</span><span class='line'>
</span><span class='line'># ipython and notebook support
</span><span class='line'>brew install zmq
</span><span class='line'>pip install ipython</span></code></pre></td></tr></table></div></figure>


<ul>
<li><h4>如何開啟你的 notebook?</h4>

<p>直接在你的資料夾下 <code>ipython notebook</code> 即可。</p></li>
<li><h4>如何 push 上 heroku?</h4></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git clone https://github.com/ipython/nbviewer.git
</span><span class='line'>cd nbviewer
</span><span class='line'>./heroku-bootstrap [repository_name]
</span><span class='line'>
</span><span class='line'>heroku addons:add memcachier:dev
</span><span class='line'>heroku addons:add newrelic:wayne</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[System Analysis]]></title>
    <link href="http://cytms.github.com/blog/2013/12/25/system-analysis/"/>
    <updated>2013-12-25T14:13:00+08:00</updated>
    <id>http://cytms.github.com/blog/2013/12/25/system-analysis</id>
    <content type="html"><![CDATA[<p><img src="http://cytms.github.com/images/2013-12-25-1413/sa.png">
以上是我們的iGotIt系統架構圖</p>

<!--More-->


<h3>Group Members</h3>


<p>張竣貿、張宗浩、張宇婷</p>




<h3>Project Title</h3>


<p>iGotIt – 商店招牌辨識系統</p>




<h3>Project Description</h3>


<p>常常走到某家店看起來很好吃的店門口都會猶豫要不要進去試試看，這時如果只要照張像，就可以找到相關評價一定可以幫助我們判斷他有沒有雷。因此我們決定實作行動裝置APP讓使用者可隨處拍攝照片，並透過手機端進行影像處理，將特徵點(features)傳遞到後台與資料庫中的資料進行比對，在回傳相關文件以利使用者辨知悉店家的評價。</p>




<h3>Related Work</h3>


<ul>
    <li><a href="http://www.cs.ucf.edu/courses/cap6411/cap6411/spring2006/Lecture11.pdf">Graph cut</a></li>
    <li><a href="http://www.cs.umd.edu/~djacobs/pubs_files/deformations_iccv.pdf">Deformation Invariant Image Matching</a></li>
    <li><a href="http://ieeexplore.ieee.org/xpl/login.jsp?reload=true&tp=&arnumber=5665875&url=http%3A%2F%2Fieeexplore.ieee.org%2Fxpls%2Fabs_all.jsp%3Farnumber%3D5665875">Le Festin: Shop sign recognition assisted food recommendation system</a></li>
</ul>




<h3>Possible Working Item</h3>


<p>目前我們從兩個方向著手進行：後台資料的處理與前台行動裝置APP的撰寫。</p>


<p>後台資料蒐集與處理部分，我們利用Java和OpenCV進行特徵點的萃取。OpenCV為影像處理的強大套件，我們將利用內建的Graph Cut Library找出影像的重點部位，再使用Color Histogram和Gabor Filter進行計算，並將處理解果輸出到線上資料庫(Parse)，以利使用者即時的比對。</p>


<p>行動裝置APP的開發，主要目的為讓使用者可以隨時隨地的拍攝照片，而拍攝玩的照片可以即時的使用OpenCV for mobile 進行特徵點的計算，將計算結果回傳至Parse以加速比對的效率。</p>


<p>系統使用流程圖如下所示：</p>


<p><img src="http://cytms.github.com/images/2013-12-25-1413/flow.png"></p>

<h3>Job Assignment</h3>


<table>
<tr><th>組員名稱</th><th>工作內容</th></tr>
<tr>
    <td>張竣貿</td>
    <td>
        蒐集資料    12/13<br />
        線上伺服器架設   12/30<br />
        利用OpenCV進行影像處理並萃取特徵點    1/3<br />
    </td>
</tr>
<tr>
    <td>張宗浩</td>
    <td>
        蒐集資料    12/13
        利用OpenCV進行影像處理並萃取特徵點    1/3
    </td>
</tr>
<tr>
    <td>張宇婷</td>
    <td>
        撰寫手機拍攝功能並萃取特徵點  12/30
        資料傳送到線上伺服器  1/3
    </td>
</tr>
</table>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[mmai proposal]]></title>
    <link href="http://cytms.github.com/blog/2013/12/02/mmai-proposal/"/>
    <updated>2013-12-02T16:50:00+08:00</updated>
    <id>http://cytms.github.com/blog/2013/12/02/mmai-proposal</id>
    <content type="html"><![CDATA[<p>mmai final project ideas</p>

<h2>商店招牌辨識系統</h2>


<h3>Motivation</h3>


<p>常常走到某家店看起來很好吃的店門口都會猶豫要不要進去試試看，這時如果只要照張像，就可以找到相關評價一定可以幫助我們判斷他有沒有雷。</p>




<h3>Reference:</h3>


<ul>
    <li>
        <a href="http://www.cs.umd.edu/~djacobs/pubs_files/deformations_iccv.pdf">Deformation Invariant Image Matching </a>
    </li>
    <li>
        <a href="http://ieeexplore.ieee.org/xpl/login.jsp?tp=&arnumber=5665875&url=http%3A%2F%2Fieeexplore.ieee.org%2Fxpls%2Fabs_all.jsp%3Farnumber%3D5665875">Le Festin: Shop sign recognition assisted food recommendation system</a>
    </li>
</ul>


<!--More-->


<p></p>


<p></p>




<h2>Trend of Fashion</h2>


<h3>Motivation</h3>


<p>服飾業者常常會透過時尚顧問公司取得目前大眾偏好的顏色、服裝款式來設計下一季得產品。而這些時尚顧問公司往往都是透過民意調查、個服飾銷售狀況來統計並分析未來趨勢，若能透過影像分析（分析FB照片、電影、時尚雜誌等）並預測未來時尚走向，將會為時尚業者帶來更大的效益。</p>


<p></p>


<p></p>




<h2>見微知著 - 料理照片知食材</h2>


<h3>Motivation</h3>


<p>拍攝照片，先找類似的料理，再分析可能食材。</p>


<p></p>


<p></p>




<h2>Where are you? - 場景辨識</h2>


<h3>Motivation</h3>


<p>想要參加<a href="http://contest.bhuntr.com/tw/Rekognition-Mobile-App-Idea-Competition/details">Rekognition APP 競賽</a>，透過facebook好友照片打卡作training data，方便未來預測你照片的所在地。</p>


<p></p>


<p></p>




<h2>Emotion Detection</h2>


<p>也是想要參加 Rekognition APP 競賽，透過FB有feeling功能探勘人臉情緒。</p>


<p></p>


<p></p>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dictionary Construction]]></title>
    <link href="http://cytms.github.com/blog/2013/08/24/week-many-at-polydice/"/>
    <updated>2013-08-24T01:09:00+08:00</updated>
    <id>http://cytms.github.com/blog/2013/08/24/week-many-at-polydice</id>
    <content type="html"><![CDATA[<p><img src="http://cytms.github.com/images/2013-08-24-01.png">
於是我成了紅豆控，開始思索以上這個問題該如何解決</p>

<!--More-->


<p>Polydice 使用 Elasticsearch + Tire 作為搜尋引擎。原本套用mmseg 的 plugin，但似乎斷詞以 unigram 為主，以至於搜尋<strong>紅豆</strong>會找成<strong>紅</strong>燒<strong>豆</strong>腐。</p>


<p>*</p>


<h3>計算n-gram的詞頻(term frequency)</h3>


<p>
n-gram指得是以n個字為單位做斷字，如：「抹茶冰淇淋很好吃」依照bi-gram做斷字會被斷成「抹茶」、「茶冰」、「冰淇」、「淇淋」、「淋很」、「很好」、「好吃」，我們可以發現有幾個字是有意義的，像是「抹茶」和「好吃」。依照中文字的特性，我們通常會取bi-gram和tri-gram為主，但此次分析的文集(corpus)為中文食譜，考量到食譜可能會有four-gram，如：「無鹽奶油」、「低筋麵粉」等，因此我依序將文集做four-gram、tri-gram、bi-gram和uni-gram斷字處理並計算出詞頻。
</p>


<p>*</p>


<h3>選取詞頻門檻(threshold)並過濾無意義的文字(stop-words)</h3>


<p>依據Zipf’s Law，我們可以知道字的排名與詞頻指數成反比，且排名特別高和特別低的可能為較不顯著、無代表性的文字，如：「與」、「和」的詞頻特別高卻沒有特殊含意，「Parmesan」(一種起司)就只有出現一次代表說可能大多數使用者不會輸入或知悉這項材料。因此，此步驟主要就是要過濾這些較不顯著的文字，留下大多數有意義的文字來供使用者搜尋之用。一開始設的門檻分別為從four-gram到uni-gram分別設10、15、20和90，取出的文字看起來是有意義的但會遇到一個問題：在bi-gram的步驟中，同時留下「巧克」和「克力」兩個字，但其實這應該屬於tri-gram中的「巧克力」，因此我多了一個判斷式：若n-gram中包含於(n+1)-gram的詞且兩者詞頻相近的話及過濾掉n-gram的字詞。又因為要考量到(n+1)-gram，所以我取到five-gram以方便進行篩選。最後，為了提高本詞庫的精確度，我將門檻全設為2，也就是說：刪除僅出現一次的字。</br>
[<a href="https://gist.github.com/cytms/5907566#file-dictionary">選詞結果</a> | <a href="https://gist.github.com/cytms/5907566#file-dictionary_index">詞庫索引</a>]
</p>


<p>*</p>


<h3>將食譜依詞庫標籤並建立反索引(inverted index)</h3>


<p>詞庫建立完成後，將每一比食譜與詞庫中的字詞進行比對，有出現的及給予標籤，並記錄該字詞出現在哪些食譜之中，以加速未來搜尋之用。
[<a href="https://gist.github.com/cytms/5907566#file-inverted_file">反索引</a>]
</p>


<p><img src="http://cytms.github.com/images/2013-08-24-02.png"></p>

<p>把plugins 改成 ik 並套用該詞庫後，效果明顯改善許多。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Simple Search Function]]></title>
    <link href="http://cytms.github.com/blog/2013/04/08/week-five-at-polydice/"/>
    <updated>2013-04-08T21:34:00+08:00</updated>
    <id>http://cytms.github.com/blog/2013/04/08/week-five-at-polydice</id>
    <content type="html"><![CDATA[<p><img src="http://cytms.github.com/images/2013-04-08-01.png">
就這樣多了一個search</p>

<!--more-->


<p>這週主要就是按圖索驥style，但還是記錄一下作為進度回報表。主要是完成search功能，擷取使用者下的關鍵字外，還會搜尋graph api 相關的app，如果使用者覺得應該把它加入排名名單中，可以點選藍藍的按鈕，它如果很厲害就會在管理員確認後顯示在top 10中。</p>

<br/>


<p><img src="http://cytms.github.com/images/2013-04-08-03.png">
撈資料庫的資料外，還會找找看相關的fb application<br/></p>

<p><img src="http://cytms.github.com/images/2013-04-08-04.png">
loader轉呀轉呀就會跑出fb application的資料<br/></p>

<p><img src="http://cytms.github.com/images/2013-04-08-02.png">
然後將bootstrap lightbox與highchart喇在一起，可以post到使用者的塗鴉牆上。對對對，還自作多情的加了一個fb login讓nav bar感覺沒有那麼空曠，也可以讓使用者隨心所欲的使用post功能ˊ_>ˋ</p>

<p>以上。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Structural Coding Style]]></title>
    <link href="http://cytms.github.com/blog/2013/04/01/week-four-at-polydice/"/>
    <updated>2013-04-01T11:08:00+08:00</updated>
    <id>http://cytms.github.com/blog/2013/04/01/week-four-at-polydice</id>
    <content type="html"><![CDATA[<p>愚人節快樂～</p>

<!-- More -->




<h3>DRY & CoC</h3>


<p>流行不能跟，潮流不能擋。目前程式設計師面臨了兩大潮流：Don&#8217;t Repeat Your Code (DRY) 和 Convention over configuration (CoC)。而 Ruby on Rails 即為運用兩大潮流到極致的語言及網頁框架。雖然我嘴巴常說好懶得寫程式，但殊不知自己寫出來的程式多的嚇死人，完全忽視了這股潮流，沉浸在繁雜的程式架構上，常常不知不覺讓費了很多時間與精神在修改及維護網站上。<br />
oop老師常常說『程式設計是展開性的』，你常常先寫一個大架構再慢慢的填寫裡面的小物件，你可以以物件的形式一直增加的你的程式。以這次實作為例，我可能會需要使用到資料表的evaluation來分析以字串形式儲存的Hash或Array，此時就可以在model中多加一個method</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>def eval_info
</span><span class='line'>  return eval(self.info)
</span><span class='line'>enf</span></code></pre></td></tr></table></div></figure>


<p>如此就可以將分析的過程包裝起來，一來可以減少eval(app.info)的寫法散佈在網站的各個角落外，還可以達到information hiding的特性，避免可能發生的安全問題。</p>

<h3>ujs</h3>


<p>為了避免HTML, CSS, Javascript混雜在一起而產生網站維護上的問題，Unobtrusive JavaScript (ujs) 被廣為推廣。身為一個 programmer newbie，常常會把Javascript的function嵌進HTML像這樣</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;div class="btn" onclick="hello();">&lt;/div></span></code></pre></td></tr></table></div></figure>


<p>點選這個div就會call function hello()，未來如果改了hello()的參數或function名稱，就要回頭找HTML我哪裡呼叫了hello()，找到最後頭昏昏眼花花還製造了一推蟲子而令人不勝其擾。使用ujs，你就可以設定在頁面開始時，哪些物件會bind哪些事件，範例如下：</p>

<figure class='code'><figcaption><span>index.html </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;hello_button&quot;</span> <span class="na">class=</span><span class="s">&quot;btn&quot;</span><span class="nt">&gt;&lt;/div&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>index.js </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nb">window</span><span class="p">.</span><span class="nx">onload</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s1">&#39;hello_button&#39;</span><span class="p">).</span><span class="nx">onClick</span> <span class="o">=</span> <span class="nx">hello</span><span class="p">;</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>


<p>如此一來你就可以直接在js檔中修改你要binding的物件和事件，避免蒐集散落一地的code的困擾。</p>

<h3>IA與UX</h3>


<p>Information Architecture (IA)是一套設計方法，主要是規劃如何組織及標籤資料(organizing &amp; labeling data)，使訊息可以被有效的傳輸，讓使用者擁有美好的使用經驗。以我的理解而言，就是要假設自己是個使用者，想想我會希望使用怎樣的產品、會喜歡怎樣的設計。這似乎又與User Expeirence(UX)的經營環環相扣且息息相關，日前聽了系上畢業的學長介紹台積電中的企業系統整合處(BSID)，其主要開發電子化商務、合作平台、商業智慧、CRM 和 SRM 等與使用者有直接關係的商品，此部門就非常強調UX，除了系統最基本的需求-正確性外，該部門也很重視簡單、快速、直覺的設計介面，希望提供更好的使用者體驗。</p>

<h3>小結</h3>


<p>洋洋灑灑的得知許多舉足輕重的概念，但無法落實也是枉然。期許自己未來在架設系統時也可以慢條斯理、有條不紊的撰寫每一行程式，將自己的構想以結構化且物件導向的方式呈現在使用者面前，使系統更加容易維護，同時也節省不必要的資源浪費。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[About Front-end]]></title>
    <link href="http://cytms.github.com/blog/2013/03/24/week-three-at-polydice/"/>
    <updated>2013-03-24T18:50:00+08:00</updated>
    <id>http://cytms.github.com/blog/2013/03/24/week-three-at-polydice</id>
    <content type="html"><![CDATA[<p><img src="http://cytms.github.com/images/view-one.png">
scss, less, css 傻傻分不清楚</p>

<!--more-->


<p>與勞倫司先生確認好網頁架構後，感覺寫出比較像樣的東西了<br/>
這禮拜正著手為它鋪上表皮。</p>

<p>這次我選用以bootstrap為基礎開發的<a href="https://github.com/TalksLab/metro-bootstrap">metro</a>作為template。
bootstrap因為包裝了Jquery-ui及css template，讓許多開發者愛不釋手，並開發出各式各樣的客製化樣板。<a href="https://github.com/thomas-mcdonald/bootstrap-sass">這裡</a>有個方便的套件可以讓新手更快速的掌握bootstrap，只要更改bootstap.scss即可瞬產生出你想要的樣板。<br/></p>

<p>boostrap metro是talkslab仿造windows 8的樣式開發而成的套件，其雖然很華麗，但他在less檔中有些參數沒有設好以至於在套用時會出現一些小問題，因此我將它的css轉成scss，如此你可以比較方便的修改他們的共同參數。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sass-convert --from css --to scss [CSS_FILE] > [SCSS_FILE]</span></code></pre></td></tr></table></div></figure>


<p>再來你會遇到一個問題：icon路徑的對應。<br/>
首先不要慌張，找到你的config/application.rb</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>config.assets.paths &lt;&lt; Rails.root.join("app", "assets", "[FOLDER]")</span></code></pre></td></tr></table></div></figure>


<p>我的解決方法是將scss檔改附檔名變成scss.erb檔，在相對應的路徑改成</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;%= asset_path('[FILE_NAME]') + '?#iefix' %></span></code></pre></td></tr></table></div></figure>


<p>如此它就會自動尋找app/assets/[FOLDER]中叫[FILE_NAME]的檔案，此法可以快又有效解決你路徑上的疑難雜症。</p>

<h4>目前我遇到了兩個問題：</h4>


<p>1) 切頁問題，因為使用<code> redirect :back </code>使我在管理者頁按delete時都會使頁面重洗一次跳到最上方。想到的解決方式為使用ajax執行delete，並將同頁的該欄位隱藏起來以避免一直洗刷頁面。<br/>
<img src="http://cytms.github.com/images/view-three.png"><br/>
按完delete後會跑到第一個tab的頁面：s<br/>
<img src="http://cytms.github.com/images/view-two.png"></p>

<p>2) 使用者頁面計算量大，因為在view中進行排名計算，使頁面有點累隔，想到的解決方法有兩個：其一為儲存排名狀態於db中，其二是請worker每日更新時儲存排名狀態於global value之中讓每個使用者都可以共享它。<br/></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MVC Notes]]></title>
    <link href="http://cytms.github.com/blog/2013/03/17/week-two-at-polydice/"/>
    <updated>2013-03-17T22:59:00+08:00</updated>
    <id>http://cytms.github.com/blog/2013/03/17/week-two-at-polydice</id>
    <content type="html"><![CDATA[<p><img src="http://cytms.github.com/images/2013-03-17.jpg">
萬事起頭難</p>

<!--more-->




<h3>Model</h3>


<p>資料表存放的地方。任何關於欄位的限制（如：不可重複等）都規定在此。延續上一週[我在做什麼]，我的Model應只有一個來存放App的資料，再用<a href="https://github.com/pluginaweek/state_machine">state-machine</a>來控制每筆App的狀態，以下為我的sample code：</p>

<figure class='code'><figcaption><span>model/app.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="n">state_machine</span> <span class="ss">:initial</span> <span class="o">=&gt;</span> <span class="ss">:waiting</span>  <span class="k">do</span>
</span><span class='line'>  <span class="c1"># 起初先宣告一開始的狀態為waiting，此外還有checked和deleted兩種狀態</span>
</span><span class='line'>  <span class="n">state</span> <span class="ss">:checked</span>
</span><span class='line'>  <span class="n">state</span> <span class="ss">:deleted</span>
</span><span class='line'>  <span class="c1"># 再來說明每種狀態會經做什麼動作變成其他狀態</span>
</span><span class='line'>  <span class="n">event</span> <span class="ss">:delete</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">transition</span> <span class="o">[</span><span class="ss">:waiting</span><span class="p">,</span> <span class="ss">:checked</span><span class="o">]</span> <span class="o">=&gt;</span> <span class="ss">:deleted</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="c1"># ...</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>如此一來你可以執行該transition來更改你的狀態</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>app.delete!</span></code></pre></td></tr></table></div></figure>




<h3>Controller</h3>


<p>對資料表執行某些動作的地方。基本的動作像是新增、讀取、更改、刪除(CRUD)都會被定義於controller中。有種設計風格叫做RESTful，它幫助我們用一種比較標準化的方式來命名跟組織controllers和actions，應盡量使用以降低controller的負擔。如果有重複使用的action應使用善加利用繼承概念以便未來網站維護之用。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rails g controller admin/apps</span></code></pre></td></tr></table></div></figure>


<p>在admin資料夾中新增一個base_controller.rb</p>

<figure class='code'><figcaption><span>base_controller.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="k">class</span> <span class="nc">Admin</span><span class="o">::</span><span class="no">BaseController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
</span><span class='line'>  <span class="n">before_filter</span> <span class="ss">:authenticate_user!</span> <span class="c1"># devise中的使用者驗證method</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>然後再將admin/apps controller繼承base controller</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>class Admin::AppsController &lt; Admin::BaseController</span></code></pre></td></tr></table></div></figure>


<p>透過物件導向的繼承概念，可以將避免重複的程式撰寫，方便未來網站管理。</p>

<h3>View</h3>


<p>如果使用RESTful的設計風格，再設計表單時你可以直接設定method即可透過http完成對model的操作。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;%= link_to 'delete', app_path(app), :method => :delete %></span></code></pre></td></tr></table></div></figure>




<h3>Devise</h3>


<p>一個註冊、登出登錄、更改密碼等多功能使用者管理套件，它可以讓你安全的存取使用者資訊，完善的api讓功能們隨call隨到。</p>

<h3>Workers</h3>


<p>幫助你定時完成某項任務。本網站需要每日定時更新資料庫中的資料才可以確保排名是即時的，因此可使用<a href="https://github.com/yzalis/Crontab">crobtab</a>實現你的願望。若待處理事件需要queue來控管的話，可考慮使用<a href="https://github.com/defunkt/resque">resque</a>和<a href="https://github.com/mperham/sidekiq">sidekiq</a></p>

<p>說的落落長卻少了成品，我會督促我自己在星期三前都摸摸看 <br/>
重點只是想要說：有規劃的專案就像是有目標的船隻，船長才知道駛往何方 <br/></p>

<blockquote><p>我們在開的船越來越大艘，有時候自己都覺得自己無力駕駛，很難想像有一天如果是開航空母艦，一次要跟上百個人合作的時候要怎麼辦？<br/>從最簡化的狀況，就是需要充足的規劃，無論是一個人、兩個人或是十個人、數十個人的專案，應該都是如此。</p><footer><strong>iCook創辦人-Lawrence</strong></footer></blockquote>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Week One @Polydice]]></title>
    <link href="http://cytms.github.com/blog/2013/03/11/week-1-at-polydice/"/>
    <updated>2013-03-11T00:27:00+08:00</updated>
    <id>http://cytms.github.com/blog/2013/03/11/week-1-at-polydice</id>
    <content type="html"><![CDATA[<p><img src="http://cytms.github.com/images/2013-03-11.jpg">
我的實習週記</p>

<!--more-->




<h3>[我在做甚麼]</h3>


<p>三月分我進行的專案是撰寫類似<a href="http://www.appdata.com/">AppData</a>的網站，使用者可以自行輸入app_id，系統會先過濾掉無效的id（像是id重複或是無效），再由網站管理者做人工確認，最後將app做排序呈現在首頁。</p>

<h3>[DB migrate]</h3>


<p>如果預估資料量少的話（<del>約數百到千筆</del>萬筆內）可適用 Rails 內建的 ActiveRecord ，ActiveRecord 為 Object-relational mapping 的應用，可以將 SQL 語法包裝起來，讓使用者在操作DB時可以更加便利並增加程式的可讀性及安全性。</p>

<h3><a href="http://en.wikipedia.org/wiki/Object-relational_mapping">[甚麼是 Object-relational mapping？]</a></h3>


<p>一種技術，實現物件導向的概念，以物件表現列、以屬性表現欄，以純OOP的概念來操控資料庫。像是rails的ActiveRecord和 .NET Entity Framework。</p>

<h3>[FB API client library]</h3>


<p>因為要調查FB APP的排行榜，必須透過 fb api 取得 app 的使用人數。我選擇使永cardinalblue所開發的<a href="https://github.com/cardinalblue/rest-graph">rest-graph</a> 作 client library，但icook較常使用<a href="https://github.com/arsduo/koala">koala</a>，兩個工具其實非常類似，都協助取得 access token 以利 fb graph 的分析。</p>

<h3>[Web crawler]</h3>


<p>我習慣用nokogiri來爬取網路資料，但這個工具可能對針對特定CSS進行網頁分析是比較有幫助的，如果是要取得get/post所傳送的資料，利用<a href="https://github.com/typhoeus/typhoeus">Typhoeus</a>相對而言是比較有效率的。</p>
]]></content>
  </entry>
  
</feed>
